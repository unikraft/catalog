name: library/lua:5.4

on:
  repository_dispatch:
    types: [core_merge, lua_merge, musl_merge]

  workflow_dispatch:

  schedule:
  - cron: '0 0 * * *' # Everyday at 12AM

  push:
    branches: [main]
    paths:
    - 'library/lua/5.4/**'
    - '.github/workflows/library-lua5.4.yaml'

  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    paths:
    - 'library/lua/5.4/**'
    - '.github/workflows/library-lua5.4.yaml'

# Automatically cancel in-progress actions on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - plat: qemu
          arch: x86_64
        - plat: qemu
          arch: arm64
        - plat: fc
          arch: x86_64
        - plat: fc
          arch: arm64

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build lua5.4
      uses: unikraft/kraftkit@staging
      with:
        loglevel: debug
        workdir: library/lua/5.4
        runtimedir: /github/workspace/.kraftkit
        plat: ${{ matrix.plat }}
        arch: ${{ matrix.arch }}
        push: false
        output: oci://index.unikraft.io/unikraft.org/lua:5.4

    - name: Archive OCI digests
      uses: actions/upload-artifact@v4
      with:
        name: oci-digests-${{ matrix.arch }}-${{ matrix.plat }}
        path: ${{ github.workspace }}/.kraftkit/oci/digests
        if-no-files-found: error

  push:
    if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Login to OCI registry
      uses: docker/login-action@v3
      with:
        registry: index.unikraft.io
        username: ${{ secrets.REG_USERNAME }}
        password: ${{ secrets.REG_TOKEN }}

    - name: Retrieve, merge and push OCI digests
      uses: ./.github/actions/merge-oci-digests
      with:
        name: index.unikraft.io/unikraft.org/lua:5.4
        push: true

  run-remote:
    name: Test Lua 5.4 (Remote OCI)
    needs: [build, push]
    runs-on: ubuntu-latest

    steps:
      - name: Login to OCI registry
        uses: docker/login-action@v3
        with:
          registry: index.unikraft.io
          username: ${{ secrets.REG_USERNAME }}
          password: ${{ secrets.REG_TOKEN }}

      - name: Run and validate
        run: |
          set -euo pipefail
          IMAGE=index.unikraft.io/unikraft.org/lua:5.4

          echo "Pull and run Lua 5.4"
          OUTPUT=$(docker run --rm "$IMAGE")

          echo "Validate output"
          EXPECTED="Hello, World!"
          if [ "$OUTPUT" != "$EXPECTED" ]; then
            echo "ERROR: expected '$EXPECTED' but got '$OUTPUT'" >&2
            exit 1
          fi
          echo "Lua 5.4 unikernel output is correct: '$OUTPUT'"

  run-local:
    name: Test Lua 5.4 (Local build)
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install kraft CLI
        run: |
          echo "deb [trusted=yes] https://deb.pkg.kraftkit.sh/ /" | sudo tee /etc/apt/sources.list.d/kraftkit.list
          sudo apt-get update
          sudo apt-get install -y kraftkit

      - name: Build, run, validate and cleanup unikernel
        run: |
          set -euo pipefail
          sudo chmod 666 /dev/kvm
          cd library/lua/5.4
  
          echo "Build Lua 5.4 unikernel"
          kraft build --no-cache --no-update --plat qemu --arch x86_64
  
          echo "Run Lua 5.4 unikernel and capture output"
          kraft run --rm -M 256M -p 8080:8080 --plat qemu --arch x86_64 . &
          PID=$!
          sleep 5

          echo "Lua 5.4 unikernel started successfully locally"

          echo "Cleanup Lua 5.4 unikernel"
          sudo kill "$PID" || true
