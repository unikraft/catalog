diff --git a/src/app/config/config.c b/src/app/config/config.c
index 102d1bbc04..dc0db3a180 100644
--- a/src/app/config/config.c
+++ b/src/app/config/config.c
@@ -1368,17 +1368,17 @@ check_and_create_data_directory(int create,
                                 char **msg_out)
 {
   cpd_check_t cpd_opts = create ? CPD_CREATE : CPD_CHECK;
-  if (group_readable)
-      cpd_opts |= CPD_GROUP_READ;
-  if (check_private_dir(directory,
-                        cpd_opts,
-                        owner) < 0) {
-    tor_asprintf(msg_out,
-                 "Couldn't %s private data directory \"%s\"",
-                 create ? "create" : "access",
-                 directory);
-    return -1;
-  }
+  /* if (group_readable) */
+  /*     cpd_opts |= CPD_GROUP_READ; */
+  /* if (check_private_dir(directory, */
+  /*                       cpd_opts, */
+  /*                       owner) < 0) { */
+  /*   tor_asprintf(msg_out, */
+  /*                "Couldn't %s private data directory \"%s\"", */
+  /*                create ? "create" : "access", */
+  /*                directory); */
+  /*   return -1; */
+  /* } */
 
 #ifndef _WIN32
   if (group_readable) {
@@ -1404,11 +1404,11 @@ create_keys_directory(const or_options_t *options)
   cpd_check_t cpd_opts = CPD_CREATE;
   if (options->DataDirectoryGroupReadable)
     cpd_opts |= CPD_GROUP_READ;
-  if (check_private_dir(options->DataDirectory, cpd_opts, options->User)) {
-    log_err(LD_OR, "Can't create/check datadirectory %s",
-            options->DataDirectory);
-    return -1;
-  }
+  /* if (check_private_dir(options->DataDirectory, cpd_opts, options->User)) { */
+  /*   log_err(LD_OR, "Can't create/check datadirectory %s", */
+  /*           options->DataDirectory); */
+  /*   return -1; */
+  /* } */
 
   /* Check the key directory. */
   if (check_private_dir(options->KeyDirectory, CPD_CREATE, options->User)) {
@@ -7180,15 +7180,16 @@ options_get_dir_fname2_suffix,(const or_options_t *options,
 int
 check_or_create_data_subdir(const char *subdir)
 {
-  char *statsdir = get_datadir_fname(subdir);
-  int return_val = 0;
-
-  if (check_private_dir(statsdir, CPD_CREATE, get_options()->User) < 0) {
-    log_warn(LD_HIST, "Unable to create %s/ directory!", subdir);
-    return_val = -1;
-  }
-  tor_free(statsdir);
-  return return_val;
+  /* char *statsdir = get_datadir_fname(subdir); */
+  /* int return_val = 0; */
+
+  /* if (check_private_dir(statsdir, CPD_CREATE, get_options()->User) < 0) { */
+  /*   log_warn(LD_HIST, "Unable to create %s/ directory!", subdir); */
+  /*   return_val = -1; */
+  /* } */
+  /* tor_free(statsdir) */
+  /* return return_val; */
+	return 0;
 }
 
 /** Create a file named <b>fname</b> with contents <b>str</b> in the
